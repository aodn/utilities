- name: manage Chef databag roles
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    no_password_changes: "{{ rds_mode | ternary('yes', 'no') }}"
    priv: "{{ item.priv | default(omit) }}"
    role_attr_flags: "{{ item.privileges | default([]) | difference(['superuser']) | join(',') }}"
    db: "{{ database.name }}"
    state: "{{ item.state | default('present') }}"
    login_host: "{{ database_endpoint }}"
    login_password: "{{ database_connection.login_password }}"
    login_user: "{{ database_connection.login_user }}"
    port: "{{ database_connection.port | default(omit) }}"
  with_items: "{{ chef_roles_databag['roles'] }}"
  when: item['name'] != 'replication'

- name: manage Chef databag role group membership
  postgresql_privs:
    type: group
    objs: "{{ item['memberof'] | default([]) | join(',') }}"
    role: "{{ item.name }}"
    db: "{{ database.name }}"
    state: "{{ item.state | default('present') }}"
    login_host: "{{ database_endpoint }}"
    login_password: "{{ database_connection.login_password }}"
    login_user: "{{ database_connection.login_user }}"
    port: "{{ database_connection.port | default(omit) }}"
  with_items: "{{ chef_roles_databag['roles'] }}"
  when: item['memberof'] is defined and item['memberof'] | length > 0

- name: grant all roles to RDS admin role
  postgresql_privs:
    db: "{{ database.name }}"
    type: group
    objs: "{{ chef_roles_databag['roles'] | map(attribute='name') | difference(['replication']) | join(',') }}"
    role: "{{ database_connection.login_user }}"
    login_host: "{{ database_endpoint }}"
    login_password: "{{ database_connection.login_password }}"
    login_user: "{{ database_connection.login_user }}"
    port: "{{ database_connection.port | default(omit) }}"
  when: rds_mode
