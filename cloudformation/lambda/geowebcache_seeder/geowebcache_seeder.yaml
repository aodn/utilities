AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  geonetwork:
    Type: String
  geoserver:
    Type: String
    Default: ''
  geowebcache:
    Type: String
  geowebcacheUser:
    Type: String
  geowebcachePassword:
    Type: String
  startZoom:
    Type: String
    Default: ''
  endZoom:
    Type: String
    Default: ''
  layers:
    Type: String
    Default: ''
  gridSetId:
    Type: String
    Default: ''
  reqFormat:
    Type: String
    Default: ''
  threadCount:
    Type: String
    Default: ''
  S3Bucket:
    Type: String
    Default: imos-binary
  S3Key:
    Type: String
    Default: lambda/geowebcache_seeder.zip
Resources:
  GeowebcachePurgeFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Purge Geoserver tiles using Geowebcache based on results returned from Geonetwork
      FunctionName: geowebcache_purge
      Handler: geowebcache_seeder.handler
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python2.7
      Timeout: 60
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Environment:
         Variables:
           PYTHONPATH: /var/task/lib
           geonetwork: !Ref geonetwork
           geoserver: !Ref geoserver
           geowebcache: !Ref geowebcache
           geowebcache_user: !Ref geowebcacheUser
           geowebcache_password: !Ref geowebcachePassword
           req_type: purge
           start_zoom: !Ref startZoom
           end_zoom: !Ref endZoom
           layers: !Ref layers
           grid_set_id: !Ref gridSetId
           req_format: !Ref reqFormat
           thread_count: !Ref threadCount
  GeowebcacheTruncateFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Truncate Geoserver tiles using Geowebcache based on results returned from Geonetwork
      FunctionName: geowebcache_truncate
      Handler: geowebcache_seeder.handler
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python2.7
      Timeout: 60
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Environment:
         Variables:
           PYTHONPATH: /var/task/lib
           geonetwork: !Ref geonetwork
           geoserver: !Ref geoserver
           geowebcache: !Ref geowebcache
           geowebcache_user: !Ref geowebcacheUser
           geowebcache_password: !Ref geowebcachePassword
           req_type: truncate
           start_zoom: !Ref startZoom
           end_zoom: !Ref endZoom
           layers: !Ref layers
           grid_set_id: !Ref gridSetId
           req_format: !Ref reqFormat
           thread_count: !Ref threadCount
  GeowebcacheSeedFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Seed Geoserver tiles using Geowebcache based on results returned from Geonetwork
      FunctionName: geowebcache_seed
      Handler: geowebcache_seeder.handler
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python2.7
      Timeout: 60
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Environment:
         Variables:
           PYTHONPATH: /var/task/lib
           geonetwork: !Ref geonetwork
           geoserver: !Ref geoserver
           geowebcache: !Ref geowebcache
           geowebcache_user: !Ref geowebcacheUser
           geowebcache_password: !Ref geowebcachePassword
           req_type: seed
           start_zoom: !Ref startZoom
           end_zoom: !Ref endZoom
           layers: !Ref layers
           grid_set_id: !Ref gridSetId
           req_format: !Ref reqFormat
           thread_count: !Ref threadCount
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {Service: [lambda.amazonaws.com]}
          Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: PublishVersion
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: ['lambda:PublishVersion']
            Resource: '*'
  GeowebcachePurgeFunctionScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Trigger Geowebcache purge lambda function everyday at 6:01pm
      ScheduleExpression: cron(1 7 * * ? *)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt GeowebcachePurgeFunction.Arn
          Id: GeowebcachePurgeFunctionScheduledRuleV1
  GeowebcacheTruncateFunctionScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Trigger Geowebcache truncate lambda function everyday at 6:02pm
      ScheduleExpression: cron(2 7 * * ? *)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt GeowebcacheTruncateFunction.Arn
          Id: GeowebcacheTruncateFunctionScheduledRuleV1
  GeowebcacheSeedFunctionScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Trigger Geowebcache seed lambda function everyday at 6:03pm
      ScheduleExpression: cron(3 7 * * ? *)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt GeowebcacheSeedFunction.Arn
          Id: GeowebcacheSeedFunctionScheduledRuleV1
  PermissionForCloudWatchScheduleRuleToInvokePurgeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GeowebcachePurgeFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GeowebcachePurgeFunctionScheduledRule.Arn
  PermissionForCloudWatchScheduleRuleToInvokeTruncateLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GeowebcacheTruncateFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GeowebcacheTruncateFunctionScheduledRule.Arn
  PermissionForCloudWatchScheduleRuleToInvokeSeedLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GeowebcacheSeedFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GeowebcacheSeedFunctionScheduledRule.Arn