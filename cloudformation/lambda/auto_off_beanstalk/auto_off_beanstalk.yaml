AWSTemplateFormatVersion: "2010-09-09"
Description: 'CloudFormation template - Shuts down all non-prod Beanstalk instances'
Resources:
  AutoOffBeanstalk:
      Type: 'AWS::Lambda::Function'
      Properties:
          Handler: 'auto_off_beanstalk.handler'
          Description: 'Shuts down all non-prod Beanstalk instances unless protected by defined tags'
          Role: !GetAtt LambdaExecutionRole.Arn
          Runtime: python2.7
          Code: .

  LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Principal: {Service: [lambda.amazonaws.com]}
                Action: ['sts:AssumeRole']
          Path: /
          ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess
          Policies:
          - PolicyName: NoCreate
            PolicyDocument:
              Version: 2012-10-17
              Statement:
              - Effect: Deny
                Action: [
                "elasticbeanstalk:Create*",
                "ec2:Create*",
                "ecs:Create*",
                "ecr:Create*",
                "elasticloadbalancing:Create*",
                "autoscaling:Create*",
                "cloudwatch:Create*",
                "s3:Create*",
                "sns:Create*",
                "cloudformation:Create*",
                "dynamodb:Create*",
                "rds:Create*",
                "sqs:Create*",
                "logs:Create*",
                "codebuild:Create*"
                  ]
                Resource: '*'
          - PolicyName: NoProdTerminate
            PolicyDocument:
              Version: 2012-10-17
              Statement:
              - Effect: Deny
                Action: [
                "elasticbeanstalk:TerminateEnvironment"
                  ]
                Resource: "arn:aws:elasticbeanstalk:*:*:environment/*/*-prod"
  CloudWatchEvent:
    Type: "AWS::Events::Rule"
    Properties:
      Description: Triggers application cron
      ScheduleExpression: "cron(0 8 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt AutoOffBeanstalk.Arn
          Id: "AutoOffBeanstalk"
  PermissionForCloudWatchScheduleRuleToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AutoOffBeanstalk
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchEvent.Arn
