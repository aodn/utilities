

- name: test talend
  hosts: "{{ hosts }}"
  gather_facts: no

  roles:
    - talend_test

  vars_files:
    - ../global_vars.yaml

  tasks:

    # checks

    - set_fact:
        test_dir: "{{ talend_log_dir | default(talend_log_file) }}"


    - name: test log dir in allowed dirs
      allowed_dir:
        allowed_dirs: "{{ allowed_log_dirs }}"
        test: "{{ test_dir }}"


    # setup: time profiling csv file

    - name: create time_profile.csv if not already exists
      copy:
        content: "test,host,action_type,elapsed_seconds"
        dest: ../time_profile.csv
        force: no
      delegate_to: localhost


    # setup: any directories that need to be present before any action (ADD, UPDATE, DELETE) can be done

    - name: create directories
      become: yes
      become_user: root
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      with_items: "{{ dirs }}"
      when: dirs is defined


    - name: drop objects in schema
      become: yes
      become_user: postgres
      command: psql -d harvest -c "select drop_objects_in_schema('"{{ item.name }}"');"
      register: truncate_schema
      with_items: "{{ database_schemas }}"
      when: create_schema == true
      tags:
        - init_db_only


    - name: run talend liqui
      become: yes
      become_user: talend
      shell: |
        talend_regex="___"{{ item }}"___";
        /usr/local/talend/bin/talend-trigger -c /usr/local/talend/etc/trigger.conf --delete -f $talend_regex,$talend_regex
      with_items: "{{ talend_jobs }}"
      when: create_schema == true
      tags:
        - init_db_only


    - include: process_action.yaml
      loop: "{{ actions }}"
      loop_control:
        loop_var: action_item


    - include: harvest_results.yaml
      delegate_to: localhost
      tags:
        - harvest_results_only
